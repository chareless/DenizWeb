// <auto-generated />
using System;
using DenizWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DenizWeb.Data.Migrations
{
    [DbContext(typeof(VeriContext))]
    [Migration("20210520230207_yorumup")]
    partial class yorumup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DenizWeb.Models.Beceriler", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("beceri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Beceriler");
                });

            modelBuilder.Entity("DenizWeb.Models.Blog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("altBaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("baslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("blogTur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("boyut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("degistirmeTarihi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eklemeTarihi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("surum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("DenizWeb.Models.Icerik", b =>
                {
                    b.Property<int>("icerikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("blogId")
                        .HasColumnType("int");

                    b.Property<string>("eklemeTarihi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idTag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("icerikId");

                    b.HasIndex("blogId");

                    b.ToTable("Icerik");
                });

            modelBuilder.Entity("DenizWeb.Models.Okul", b =>
                {
                    b.Property<int>("okulId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("okulAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("okulInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("okulTarih")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("okulTur")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("okulId");

                    b.ToTable("Okul");
                });

            modelBuilder.Entity("DenizWeb.Models.Site", b =>
                {
                    b.Property<int>("MyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adresUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("backFotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dogumTarihi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dogumYeri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("egitimBolumu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("egitimDurumu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("formUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hakkımda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("meslek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profileFotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sliderFotoAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sliderFotoBaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sliderFotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MyId");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("DenizWeb.Models.SliderFoto", b =>
                {
                    b.Property<int>("sliderFotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fotoAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fotoBaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sliderFotoId");

                    b.ToTable("SliderFoto");
                });

            modelBuilder.Entity("DenizWeb.Models.Sosyal", b =>
                {
                    b.Property<int>("sosyalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("sosyalFooter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sosyalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sosyalTur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sosyalUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sosyalId");

                    b.ToTable("Sosyal");
                });

            modelBuilder.Entity("DenizWeb.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ban")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cinsiyet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("isim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("DenizWeb.Models.Yorum", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("blogId")
                        .HasColumnType("int");

                    b.Property<string>("icerik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("onay")
                        .HasColumnType("bit");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("blogId");

                    b.HasIndex("userId");

                    b.ToTable("Yorum");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DenizWeb.Models.Icerik", b =>
                {
                    b.HasOne("DenizWeb.Models.Blog", "Blog")
                        .WithMany("icerik")
                        .HasForeignKey("blogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("DenizWeb.Models.Yorum", b =>
                {
                    b.HasOne("DenizWeb.Models.Blog", "Blog")
                        .WithMany("yorumlar")
                        .HasForeignKey("blogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DenizWeb.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("Blog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DenizWeb.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DenizWeb.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DenizWeb.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DenizWeb.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DenizWeb.Models.Blog", b =>
                {
                    b.Navigation("icerik");

                    b.Navigation("yorumlar");
                });
#pragma warning restore 612, 618
        }
    }
}
